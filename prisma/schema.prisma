generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String
  password        String
  confirmPassword String
  created_at      DateTime?          @default(now())
  updated_at      DateTime?          @default(now())

  @@map("users")
}

model Order {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName        String
  phone           String
  address         String
  addressNumber   Int
  addressDistrict String
  addressCity     String
  complement      String?
  paymentMethod   String
  cpf             String?
  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())
  products        OrderProduct[]
  status          Boolean
  deliveryStatus  Boolean?
  deliveryStatusDone  Boolean?
  finishOrder     Boolean?
  FinalPrice      String

  @@map("orders")
}
model Product {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  name        String
  price       String
  quantity    Int
  stock       Boolean
  images      String[]
  description String
  category    Category           @relation(fields: [categoryId], references: [id])
  categoryId  String             @db.ObjectId
  sizeId      String             @db.ObjectId
  size        Size               @relation(fields: [sizeId], references: [id])
  orders      OrderProduct[]

  @@map("products")
}

model OrderProduct {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  productName     String
  quantityBought  Int
  UnityPrice      String
  UnitySubTotalPrice      String
  order           Order     @relation(fields: [orderId], references: [id])
  orderId         String    @db.ObjectId
  product         Product   @relation(fields: [productId], references: [id])
  productId       String    @db.ObjectId

  @@map("orderProducts")
}

model Category {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  products   Product[]

  @@map("categories")
}

model Size {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  products Product[]
}

model Contact {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  message   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("contacts")
}